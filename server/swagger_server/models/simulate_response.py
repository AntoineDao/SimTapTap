# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.battle import Battle  # noqa: F401,E501
from swagger_server.models.team import Team  # noqa: F401,E501
from swagger_server import util


class SimulateResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, battles: List[Battle]=None, attacking_team: Team=None, defending_team: Team=None):  # noqa: E501
        """SimulateResponse - a model defined in Swagger

        :param battles: The battles of this SimulateResponse.  # noqa: E501
        :type battles: List[Battle]
        :param attacking_team: The attacking_team of this SimulateResponse.  # noqa: E501
        :type attacking_team: Team
        :param defending_team: The defending_team of this SimulateResponse.  # noqa: E501
        :type defending_team: Team
        """
        self.swagger_types = {
            'battles': List[Battle],
            'attacking_team': Team,
            'defending_team': Team
        }

        self.attribute_map = {
            'battles': 'battles',
            'attacking_team': 'attackingTeam',
            'defending_team': 'defendingTeam'
        }

        self._battles = battles
        self._attacking_team = attacking_team
        self._defending_team = defending_team

    @classmethod
    def from_dict(cls, dikt) -> 'SimulateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimulateResponse of this SimulateResponse.  # noqa: E501
        :rtype: SimulateResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def battles(self) -> List[Battle]:
        """Gets the battles of this SimulateResponse.


        :return: The battles of this SimulateResponse.
        :rtype: List[Battle]
        """
        return self._battles

    @battles.setter
    def battles(self, battles: List[Battle]):
        """Sets the battles of this SimulateResponse.


        :param battles: The battles of this SimulateResponse.
        :type battles: List[Battle]
        """

        self._battles = battles

    @property
    def attacking_team(self) -> Team:
        """Gets the attacking_team of this SimulateResponse.


        :return: The attacking_team of this SimulateResponse.
        :rtype: Team
        """
        return self._attacking_team

    @attacking_team.setter
    def attacking_team(self, attacking_team: Team):
        """Sets the attacking_team of this SimulateResponse.


        :param attacking_team: The attacking_team of this SimulateResponse.
        :type attacking_team: Team
        """

        self._attacking_team = attacking_team

    @property
    def defending_team(self) -> Team:
        """Gets the defending_team of this SimulateResponse.


        :return: The defending_team of this SimulateResponse.
        :rtype: Team
        """
        return self._defending_team

    @defending_team.setter
    def defending_team(self, defending_team: Team):
        """Sets the defending_team of this SimulateResponse.


        :param defending_team: The defending_team of this SimulateResponse.
        :type defending_team: Team
        """

        self._defending_team = defending_team
