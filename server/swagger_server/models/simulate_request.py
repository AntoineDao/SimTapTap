# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.team import Team  # noqa: F401,E501
from swagger_server import util


class SimulateRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, repeat: int=None, attacker: Team=None, defender: Team=None):  # noqa: E501
        """SimulateRequest - a model defined in Swagger

        :param repeat: The repeat of this SimulateRequest.  # noqa: E501
        :type repeat: int
        :param attacker: The attacker of this SimulateRequest.  # noqa: E501
        :type attacker: Team
        :param defender: The defender of this SimulateRequest.  # noqa: E501
        :type defender: Team
        """
        self.swagger_types = {
            'repeat': int,
            'attacker': Team,
            'defender': Team
        }

        self.attribute_map = {
            'repeat': 'repeat',
            'attacker': 'attacker',
            'defender': 'defender'
        }

        self._repeat = repeat
        self._attacker = attacker
        self._defender = defender

    @classmethod
    def from_dict(cls, dikt) -> 'SimulateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimulateRequest of this SimulateRequest.  # noqa: E501
        :rtype: SimulateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repeat(self) -> int:
        """Gets the repeat of this SimulateRequest.

        How many battles should be simulated. Defaults to 1  # noqa: E501

        :return: The repeat of this SimulateRequest.
        :rtype: int
        """
        return self._repeat

    @repeat.setter
    def repeat(self, repeat: int):
        """Sets the repeat of this SimulateRequest.

        How many battles should be simulated. Defaults to 1  # noqa: E501

        :param repeat: The repeat of this SimulateRequest.
        :type repeat: int
        """
        if repeat is not None and repeat > 1000:  # noqa: E501
            raise ValueError("Invalid value for `repeat`, must be a value less than or equal to `1000`")  # noqa: E501
        if repeat is not None and repeat < 1:  # noqa: E501
            raise ValueError("Invalid value for `repeat`, must be a value greater than or equal to `1`")  # noqa: E501

        self._repeat = repeat

    @property
    def attacker(self) -> Team:
        """Gets the attacker of this SimulateRequest.


        :return: The attacker of this SimulateRequest.
        :rtype: Team
        """
        return self._attacker

    @attacker.setter
    def attacker(self, attacker: Team):
        """Sets the attacker of this SimulateRequest.


        :param attacker: The attacker of this SimulateRequest.
        :type attacker: Team
        """

        self._attacker = attacker

    @property
    def defender(self) -> Team:
        """Gets the defender of this SimulateRequest.


        :return: The defender of this SimulateRequest.
        :rtype: Team
        """
        return self._defender

    @defender.setter
    def defender(self, defender: Team):
        """Sets the defender of this SimulateRequest.


        :param defender: The defender of this SimulateRequest.
        :type defender: Team
        """

        self._defender = defender
