# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.battle_effect import BattleEffect  # noqa: F401,E501
from swagger_server.models.battle_hero_ref import BattleHeroRef  # noqa: F401,E501
from swagger_server import util


class HeroTurn(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, hero: BattleHeroRef=None, effects: BattleEffect=None):  # noqa: E501
        """HeroTurn - a model defined in Swagger

        :param hero: The hero of this HeroTurn.  # noqa: E501
        :type hero: BattleHeroRef
        :param effects: The effects of this HeroTurn.  # noqa: E501
        :type effects: BattleEffect
        """
        self.swagger_types = {
            'hero': BattleHeroRef,
            'effects': BattleEffect
        }

        self.attribute_map = {
            'hero': 'hero',
            'effects': 'effects'
        }

        self._hero = hero
        self._effects = effects

    @classmethod
    def from_dict(cls, dikt) -> 'HeroTurn':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HeroTurn of this HeroTurn.  # noqa: E501
        :rtype: HeroTurn
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hero(self) -> BattleHeroRef:
        """Gets the hero of this HeroTurn.


        :return: The hero of this HeroTurn.
        :rtype: BattleHeroRef
        """
        return self._hero

    @hero.setter
    def hero(self, hero: BattleHeroRef):
        """Sets the hero of this HeroTurn.


        :param hero: The hero of this HeroTurn.
        :type hero: BattleHeroRef
        """

        self._hero = hero

    @property
    def effects(self) -> BattleEffect:
        """Gets the effects of this HeroTurn.


        :return: The effects of this HeroTurn.
        :rtype: BattleEffect
        """
        return self._effects

    @effects.setter
    def effects(self, effects: BattleEffect):
        """Sets the effects of this HeroTurn.


        :param effects: The effects of this HeroTurn.
        :type effects: BattleEffect
        """

        self._effects = effects
